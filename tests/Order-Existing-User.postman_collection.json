{
	"info": {
		"_postman_id": "ca241a3f-fbfe-4b49-af38-e88a8089e3b0",
		"name": "Order Existing User",
		"description": "# ðŸ§ª Get started here\n\nThis template helps ensure your API continues to work as expected after updates or changes. It contains sample requests and [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) for a series of tests that validate different aspects of an API, including:\n\n1. **Status code verification:** We'll check if the API returns the expected status codes for various requests, ensuring reliability and proper error handling.\n2. **JSON schema verification:** We'll make sure the JSON response conforms to a specified JSON Schema, ensuring API contracts are honored.\n3. **Response time verification:** We'll verify that the API's response time is within the acceptable range, providing a smooth user experience and optimizing performance.\n4. **Response body verification:** We'll validate the structure and content of the response body for accuracy, ensuring the integrity of the data and preventing potential issues downstream.\n5. **Header verification:** We'll confirm the presence and correct values of specific headers in the response, enabling secure and well-structured communication between your app and its users.\n    \n\n## ðŸ”– **How to use this template**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n**Step 4:** [Run the collection](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/) by selecting \"Run\".\n\n<img src=\"https://content.pstmn.io/666cfa65-6e00-4308-871b-f831128bc0ac/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"246\" height=\"102\">\n\n## ðŸ’¡Related templates\n\n  \n[Integration testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.pstmn.io/performance-testing)  \n[Mock data generation](https://go.pstmn.io/mock-data-generation)  \n[Common API vulnerabilities check](https://go.pstmn.io/common-API-vulnerabilities-check)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9827180",
		"_collection_link": "https://lively-resonance-96742.postman.co/workspace/LMS~561fa2bf-dcf3-4e9d-a566-4f28d32cf25c/collection/9827180-ca241a3f-fbfe-4b49-af38-e88a8089e3b0?action=share&creator=9827180&source=collection_link"
	},
	"item": [
		{
			"name": "User Creation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = JSON.parse(pm.request.body.raw)\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"userEmail\", body.email);\r",
							"pm.collectionVariables.set(\"userPassword\", body.password);\r",
							"pm.collectionVariables.set(\"userId\", responseJson.doc.id);\r",
							"\r",
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that the 'message' field is not empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate 'doc' object is present in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.doc).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"The 'id' field in the 'doc' object is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.doc).to.exist.and.to.be.an('object');\r",
							"    pm.expect(responseData.doc.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate firstName field is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.doc).to.exist;\r",
							"    pm.expect(responseData.doc.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Schema is valid\", function () {\r",
							"    var schema = {\r",
							"        type: \"object\",\r",
							"        properties: {\r",
							"            message: {\r",
							"                type: \"string\",\r",
							"                minLength: 1\r",
							"            },\r",
							"            doc: {\r",
							"                type: \"object\",\r",
							"                properties: {\r",
							"                    id: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    firstName: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    lastName: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    roles: {\r",
							"                        type: \"array\",\r",
							"                        items: {\r",
							"                            type: \"string\",\r",
							"                            minLength: 1\r",
							"                        }\r",
							"                    },\r",
							"                    slug: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    email: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    createdAt: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    },\r",
							"                    updatedAt: {\r",
							"                        type: \"string\",\r",
							"                        minLength: 1\r",
							"                    }\r",
							"                },\r",
							"                required: [\"id\", \"firstName\", \"lastName\", \"roles\", \"slug\", \"email\", \"createdAt\", \"updatedAt\"]\r",
							"            }\r",
							"        },\r",
							"        required: [\"message\", \"doc\"]\r",
							"    };\r",
							"\r",
							"    var response = pm.response.json();\r",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-url}}/users",
					"host": [
						"{{api-url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "User Creation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/users",
							"host": [
								"{{api}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "500"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "498"
						},
						{
							"key": "Date",
							"value": "Wed, 01 Mar 2023 02:42:08 GMT"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1677638561"
						},
						{
							"key": "Content-Language",
							"value": "en"
						},
						{
							"key": "Vary",
							"value": "X-HTTP-Method-Override, Accept-Encoding"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "247"
						},
						{
							"key": "ETag",
							"value": "W/\"f7-GS9EUuKxL+QakNIFzgVFl17Ppio\""
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User successfully created.\",\n    \"doc\": {\n        \"id\": \"63febb814bcf6baf2d54c18a\",\n        \"firstName\": \"Mariela\",\n        \"lastName\": \"Russel\",\n        \"roles\": [\n            \"user\"\n        ],\n        \"email\": \"yazmin0@hotmail.com\",\n        \"createdAt\": \"2023-03-01T02:42:09.221Z\",\n        \"updatedAt\": \"2023-03-01T02:42:09.221Z\"\n    }\n}"
				}
			]
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(responseJson)\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"pm.test(\"response message should have the Auth Passed message\", function () {\r",
							"    pm.expect(responseJson.message).to.eql(\"Auth Passed\");\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie payload-token is present\", () => {\r",
							"  pm.expect(pm.cookies.has('payload-token')).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{userEmail}}\",\r\n    \"password\":\"{{userPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-url}}/users/login",
					"host": [
						"{{api-url}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "User Admin",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"guillomarindavila@gmail.com\",\r\n    \"password\":\"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/users/login",
							"host": [
								"{{api}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "500"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "498"
						},
						{
							"key": "Date",
							"value": "Sun, 26 Feb 2023 20:02:24 GMT"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1677441772"
						},
						{
							"key": "Content-Language",
							"value": "en"
						},
						{
							"key": "Vary",
							"value": "X-HTTP-Method-Override, Accept-Encoding"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
						},
						{
							"key": "Set-Cookie",
							"value": "payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk; Path=/; Expires=Sun, 26 Feb 2023 22:02:25 GMT; HttpOnly; SameSite=Lax"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "608"
						},
						{
							"key": "ETag",
							"value": "W/\"260-s6RoOCQCauMEDs9T7oLSwwLA83Q\""
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Auth Passed\",\n    \"user\": {\n        \"id\": \"63e015ac1b1dbc4f13ac51e2\",\n        \"firstName\": \"Hayt\",\n        \"lastName\": \"Wayne\",\n        \"phone\": \"4145857846\",\n        \"address\": \"MI casa\",\n        \"birthDate\": \"1999-01-01T00:00:00.000Z\",\n        \"roles\": [\n            \"admin\"\n        ],\n        \"email\": \"haytwayne.16@gmail.com\",\n        \"createdAt\": \"2023-02-05T20:46:37.042Z\",\n        \"updatedAt\": \"2023-02-26T18:28:00.054Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk\",\n    \"exp\": 1677448945\n}"
				},
				{
					"name": "User Editor",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"arepayquezo@gmail.com\",\r\n    \"password\":\"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/users/login",
							"host": [
								"{{api}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "500"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "498"
						},
						{
							"key": "Date",
							"value": "Sun, 26 Feb 2023 20:02:24 GMT"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1677441772"
						},
						{
							"key": "Content-Language",
							"value": "en"
						},
						{
							"key": "Vary",
							"value": "X-HTTP-Method-Override, Accept-Encoding"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
						},
						{
							"key": "Set-Cookie",
							"value": "payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk; Path=/; Expires=Sun, 26 Feb 2023 22:02:25 GMT; HttpOnly; SameSite=Lax"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "608"
						},
						{
							"key": "ETag",
							"value": "W/\"260-s6RoOCQCauMEDs9T7oLSwwLA83Q\""
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Auth Passed\",\n    \"user\": {\n        \"id\": \"63e015ac1b1dbc4f13ac51e2\",\n        \"firstName\": \"Hayt\",\n        \"lastName\": \"Wayne\",\n        \"phone\": \"4145857846\",\n        \"address\": \"MI casa\",\n        \"birthDate\": \"1999-01-01T00:00:00.000Z\",\n        \"roles\": [\n            \"admin\"\n        ],\n        \"email\": \"haytwayne.16@gmail.com\",\n        \"createdAt\": \"2023-02-05T20:46:37.042Z\",\n        \"updatedAt\": \"2023-02-26T18:28:00.054Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk\",\n    \"exp\": 1677448945\n}"
				}
			]
		},
		{
			"name": "User Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Validate the message field is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;",
							"});",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"message\": {\"type\": \"string\", \"enum\": [\"Orden creada correctamente\"]},",
							"        \"order\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"id\": {\"type\": \"string\"},",
							"                \"amount\": {\"type\": \"number\"},",
							"                \"status\": {\"type\": \"string\", \"enum\": [\"inactive\"]},",
							"                \"type\": {\"type\": \"string\", \"enum\": [\"order\"]},",
							"                \"customer\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"id\": {\"type\": \"string\"},",
							"                        \"firstName\": {\"type\": \"string\"},",
							"                        \"lastName\": {\"type\": \"string\"},",
							"                        \"roles\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                        \"slug\": {\"type\": \"string\"},",
							"                        \"email\": {\"type\": \"string\"},",
							"                        \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                        \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                    },",
							"                    \"required\": [\"id\", \"firstName\", \"lastName\", \"roles\", \"slug\", \"email\", \"createdAt\", \"updatedAt\"]",
							"                },",
							"                \"products\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {\"type\": \"string\"},",
							"                            \"name\": {\"type\": \"string\"},",
							"                            \"description\": {\"type\": \"string\"},",
							"                            \"productType\": {",
							"                                \"type\": \"object\",",
							"                                \"properties\": {",
							"                                    \"value\": {",
							"                                        \"type\": \"object\",",
							"                                        \"properties\": {",
							"                                            \"id\": {\"type\": \"string\"},",
							"                                            \"name\": {\"type\": \"string\"},",
							"                                            \"description\": {\"type\": \"string\"},",
							"                                            \"category\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                                            \"teacher\": {\"type\": \"string\"},",
							"                                            \"lessons\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                                            \"relatedCourses\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                                            \"createdBy\": {\"type\": \"string\"},",
							"                                            \"lastModifiedBy\": {\"type\": \"string\"},",
							"                                            \"slug\": {\"type\": \"string\"},",
							"                                            \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                            \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                                        },",
							"                                        \"required\": [\"id\", \"name\", \"description\", \"category\", \"teacher\", \"lessons\", \"relatedCourses\", \"createdBy\", \"lastModifiedBy\", \"slug\", \"createdAt\", \"updatedAt\"]",
							"                                    },",
							"                                    \"relationTo\": {\"type\": \"string\", \"enum\": [\"courses\"]}",
							"                                },",
							"                                \"required\": [\"value\", \"relationTo\"]",
							"                            },",
							"                            \"productStatus\": {\"type\": \"string\", \"enum\": [\"active\"]},",
							"                            \"productPrice\": {",
							"                                \"type\": \"array\",",
							"                                \"items\": {",
							"                                    \"type\": \"object\",",
							"                                    \"properties\": {",
							"                                        \"price\": {\"type\": \"number\"},",
							"                                        \"aceptedCurrency\": {\"type\": \"string\", \"enum\": [\"USD\"]},",
							"                                        \"id\": {\"type\": \"string\"}",
							"                                    },",
							"                                    \"required\": [\"price\", \"aceptedCurrency\", \"id\"]",
							"                                }",
							"                            },",
							"                            \"productImage\": {",
							"                                \"type\": \"object\",",
							"                                \"properties\": {",
							"                                    \"id\": {\"type\": \"string\"},",
							"                                    \"altText\": {\"type\": \"string\"},",
							"                                    \"createdBy\": {\"type\": \"string\"},",
							"                                    \"lastModifiedBy\": {\"type\": \"string\"},",
							"                                    \"slug\": {\"type\": \"string\"},",
							"                                    \"filename\": {\"type\": \"string\"},",
							"                                    \"mimeType\": {\"type\": \"string\"},",
							"                                    \"filesize\": {\"type\": \"number\"},",
							"                                    \"width\": {\"type\": \"number\"},",
							"                                    \"height\": {\"type\": \"number\"},",
							"                                    \"sizes\": {",
							"                                        \"type\": \"object\",",
							"                                        \"properties\": {",
							"                                            \"thumbnail\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"width\": {\"type\": \"number\"},",
							"                                                    \"height\": {\"type\": \"number\"},",
							"                                                    \"mimeType\": {\"type\": \"string\"},",
							"                                                    \"filesize\": {\"type\": \"number\"},",
							"                                                    \"filename\": {\"type\": \"string\"},",
							"                                                    \"url\": {\"type\": \"string\"}",
							"                                                },",
							"                                                \"required\": [\"width\", \"height\", \"mimeType\", \"filesize\", \"filename\", \"url\"]",
							"                                            },",
							"                                            \"card\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"width\": {\"type\": \"number\"},",
							"                                                    \"height\": {\"type\": \"number\"},",
							"                                                    \"mimeType\": {\"type\": \"string\"},",
							"                                                    \"filesize\": {\"type\": \"number\"},",
							"                                                    \"filename\": {\"type\": \"string\"},",
							"                                                    \"url\": {\"type\": \"string\"}",
							"                                                },",
							"                                                \"required\": [\"width\", \"height\", \"mimeType\", \"filesize\", \"filename\", \"url\"]",
							"                                            },",
							"                                            \"tablet\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"width\": {\"type\": \"number\"},",
							"                                                    \"height\": {\"type\": \"number\"},",
							"                                                    \"mimeType\": {\"type\": \"string\"},",
							"                                                    \"filesize\": {\"type\": \"number\"},",
							"                                                    \"filename\": {\"type\": \"string\"},",
							"                                                    \"url\": {\"type\": \"string\"}",
							"                                                },",
							"                                                \"required\": [\"width\", \"height\", \"mimeType\", \"filesize\", \"filename\", \"url\"]",
							"                                            }",
							"                                        },",
							"                                        \"required\": [\"thumbnail\", \"card\", \"tablet\"]",
							"                                    },",
							"                                    \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                    \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                    \"url\": {\"type\": \"string\"}",
							"                                },",
							"                                \"required\": [\"id\", \"altText\", \"createdBy\", \"lastModifiedBy\", \"slug\", \"filename\", \"mimeType\", \"filesize\", \"width\", \"height\", \"sizes\", \"createdAt\", \"updatedAt\", \"url\"]",
							"                            },",
							"                            \"relatedProducts\": {",
							"                                \"type\": \"array\",",
							"                                \"items\": {",
							"                                    \"type\": \"object\",",
							"                                    \"properties\": {",
							"                                        \"id\": {\"type\": \"string\"},",
							"                                        \"name\": {\"type\": \"string\"},",
							"                                        \"description\": {\"type\": \"string\"},",
							"                                        \"productType\": {",
							"                                            \"type\": \"object\",",
							"                                            \"properties\": {",
							"                                                \"value\": {\"type\": \"string\"},",
							"                                                \"relationTo\": {\"type\": \"string\", \"enum\": [\"courses\"]}",
							"                                            },",
							"                                            \"required\": [\"value\", \"relationTo\"]",
							"                                        },",
							"                                        \"productStatus\": {\"type\": \"string\", \"enum\": [\"active\"]},",
							"                                        \"productPrice\": {",
							"                                            \"type\": \"array\",",
							"                                            \"items\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"price\": {\"type\": \"number\"},",
							"                                                    \"aceptedCurrency\": {\"type\": \"string\", \"enum\": [\"USD\"]},",
							"                                                    \"id\": {\"type\": \"string\"}",
							"                                                },",
							"                                                \"required\": [\"price\", \"aceptedCurrency\", \"id\"]",
							"                                            }",
							"                                        },",
							"                                        \"productImage\": {\"type\": \"string\"},",
							"                                        \"info\": {",
							"                                            \"type\": \"array\",",
							"                                            \"items\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"children\": {",
							"                                                        \"type\": \"array\",",
							"                                                        \"items\": {",
							"                                                            \"type\": \"object\",",
							"                                                            \"properties\": {",
							"                                                                \"text\": {\"type\": \"string\"}",
							"                                                            },",
							"                                                            \"required\": [\"text\"]",
							"                                                        }",
							"                                                    }",
							"                                                },",
							"                                                \"required\": [\"children\"]",
							"                                            }",
							"                                        },",
							"                                        \"lastModifiedBy\": {\"type\": \"string\"},",
							"                                        \"createdBy\": {\"type\": \"string\"},",
							"                                        \"slug\": {\"type\": \"string\"},",
							"                                        \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                        \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                                    },",
							"                                    \"required\": [\"id\", \"name\", \"description\", \"productType\", \"productStatus\", \"productPrice\", \"productImage\", \"info\", \"lastModifiedBy\", \"createdBy\", \"slug\", \"createdAt\", \"updatedAt\"]",
							"                                }",
							"                            },",
							"                            \"info\": {",
							"                                \"type\": \"array\",",
							"                                \"items\": {",
							"                                    \"type\": \"object\",",
							"                                    \"properties\": {",
							"                                        \"children\": {",
							"                                            \"type\": \"array\",",
							"                                            \"items\": {",
							"                                                \"type\": \"object\",",
							"                                                \"properties\": {",
							"                                                    \"text\": {\"type\": \"string\"}",
							"                                                },",
							"                                                \"required\": [\"text\"]",
							"                                            }",
							"                                        }",
							"                                    },",
							"                                    \"required\": [\"children\"]",
							"                                }",
							"                            },",
							"                            \"lastModifiedBy\": {",
							"                                \"type\": \"object\",",
							"                                \"properties\": {",
							"                                    \"id\": {\"type\": \"string\"},",
							"                                    \"firstName\": {\"type\": \"string\"},",
							"                                    \"lastName\": {\"type\": \"string\"},",
							"                                    \"roles\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                                    \"slug\": {\"type\": \"string\"},",
							"                                    \"email\": {\"type\": \"string\"},",
							"                                    \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                    \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                                },",
							"                                \"required\": [\"id\", \"firstName\", \"lastName\", \"roles\", \"slug\", \"email\", \"createdAt\", \"updatedAt\"]",
							"                            },",
							"                            \"createdBy\": {",
							"                                \"type\": \"object\",",
							"                                \"properties\": {",
							"                                    \"id\": {\"type\": \"string\"},",
							"                                    \"firstName\": {\"type\": \"string\"},",
							"                                    \"lastName\": {\"type\": \"string\"},",
							"                                    \"roles\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}},",
							"                                    \"slug\": {\"type\": \"string\"},",
							"                                    \"email\": {\"type\": \"string\"},",
							"                                    \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                                    \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                                },",
							"                                \"required\": [\"id\", \"firstName\", \"lastName\", \"roles\", \"slug\", \"email\", \"createdAt\", \"updatedAt\"]",
							"                            },",
							"                            \"slug\": {\"type\": \"string\"},",
							"                            \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                            \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"                        },",
							"                        \"required\": [\"id\", \"name\", \"description\", \"productType\", \"productStatus\", \"productPrice\", \"productImage\", \"relatedProducts\", \"info\", \"lastModifiedBy\", \"createdBy\", \"slug\", \"createdAt\", \"updatedAt\"]",
							"                    }",
							"                },",
							"                \"referenceNumber\": {\"type\": \"string\"},",
							"                \"createdAt\": {\"type\": \"string\", \"format\": \"date-time\"},",
							"                \"updatedAt\": {\"type\": \"string\", \"format\": \"date-time\"}",
							"            },",
							"            \"required\": [\"id\", \"amount\", \"status\", \"type\", \"customer\", \"products\", \"referenceNumber\", \"createdAt\", \"updatedAt\"]",
							"        }",
							"    },",
							"    \"required\": [\"message\", \"order\"]",
							"};",
							"",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"paymentMethodType\": \"zelle\",\n    \"paymentMethod\": {\n        \"zelleEmail\": \"{{$randomEmail}}\",\n        \"zelleName\": \"{{$randomFullName}}\"\n    },\n    \"product\": {\n        \"id\": \"64b98e721e72244068e34411\"\n    },\n    \"referenceNumber\": \"123123123123\",\n    \"amount\": 222\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-url}}/orders/new-user-order",
					"host": [
						"{{api-url}}"
					],
					"path": [
						"orders",
						"new-user-order"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://postman-echo.com"
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}