{
	"info": {
		"_postman_id": "e4ecbb8c-c8e9-4a94-bc0c-892c884db2d0",
		"name": "Enrollement Process",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9827180",
		"_collection_link": "https://lively-resonance-96742.postman.co/workspace/LMS~561fa2bf-dcf3-4e9d-a566-4f28d32cf25c/collection/9827180-e4ecbb8c-c8e9-4a94-bc0c-892c884db2d0?action=share&creator=9827180&source=collection_link"
	},
	"item": [
		{
			"name": "New User",
			"item": [
				{
					"name": "New User Order Plan Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Validate the message field is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Amount is a non-negative integer\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.amount).to.be.a('number');\r",
									"    pm.expect(responseData.order.amount).to.be.at.least(0, \"Amount should be non-negative\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the 'products' array is present and not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.products).to.exist.and.to.be.an('array');\r",
									"    pm.expect(responseData.order.products.length).to.be.at.least(1, \"Array should contain at least one element\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethodType\": \"zelle\",\r\n    \"paymentMethod\": {\r\n        \"zelleEmail\": \"{{$randomEmail}}\",\r\n        \"zelleName\": \"{{$randomFullName}}\"\r\n    },\r\n    \"customer\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\":\"{{$randomLastName}}\",\r\n        \"email\":\"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\",\r\n        \"phone\": \"{{$randomPhoneNumber}}\"\r\n    },\r\n    \"product\": {{productPlanObj}},\r\n    \"referenceNumber\": \"{{randomNumber}}\",\r\n    \"amount\": {{$randomPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/orders/new-user-order",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"orders",
								"new-user-order"
							]
						}
					},
					"response": [
						{
							"name": "Transactions Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"transactionAble\": {\r\n        \"value\": \"{{courseId}}\",\r\n        \"relationTo\": \"courses\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/transactions",
									"host": [
										"{{api}}"
									],
									"path": [
										"transactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Mar 2023 03:01:01 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677639673"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "706"
								},
								{
									"key": "ETag",
									"value": "W/\"2c2-4tDBtdWMWIr4zltm25kuZkMx7Ok\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Transaction successfully created.\",\n    \"doc\": {\n        \"id\": \"63febfed22ed33e86bbe0db2\",\n        \"amount\": 52251,\n        \"status\": \"inactive\",\n        \"customer\": {\n            \"id\": \"63febdaf4bcf6baf2d54c213\",\n            \"firstName\": \"Gardner\",\n            \"lastName\": \"Ward\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"email\": \"sammy_jerde@hotmail.com\",\n            \"createdAt\": \"2023-03-01T02:51:27.600Z\",\n            \"updatedAt\": \"2023-03-01T02:51:35.131Z\"\n        },\n        \"transactionAble\": {\n            \"value\": {\n                \"id\": \"63fb9c231e385dd6d67dc1b2\",\n                \"name\": \"Componente Docente\",\n                \"description\": \"Docentes\",\n                \"teacher\": \"63dfd4607777384c243e3d0e\",\n                \"createdBy\": \"63dfd4607777384c243e3d0e\",\n                \"createdAt\": \"2023-02-26T17:51:31.949Z\",\n                \"updatedAt\": \"2023-02-26T17:51:31.949Z\"\n            },\n            \"relationTo\": \"courses\"\n        },\n        \"createdAt\": \"2023-03-01T03:01:01.700Z\",\n        \"updatedAt\": \"2023-03-01T03:01:01.700Z\"\n    }\n}"
						},
						{
							"name": "Orders Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"products\": [\"{{productId}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/orders",
									"host": [
										"{{api}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "499"
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 22:31:34 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1678660337"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "843"
								},
								{
									"key": "ETag",
									"value": "W/\"34b-wDqHoHzRKalXEL5dgq+PH7I61eo\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order successfully created.\",\n    \"doc\": {\n        \"id\": \"640e52c76f5b664a1de55095\",\n        \"amount\": 94763,\n        \"status\": \"inactive\",\n        \"customer\": \"640e2d64ced37b00ac351f7e\",\n        \"products\": [\n            {\n                \"id\": \"640e4a6a7d586a50e509ae72\",\n                \"name\": \"Towels\",\n                \"description\": \"Lead\",\n                \"productPrices\": [\n                    {\n                        \"id\": \"640e4a697d586a50e509ae6d\",\n                        \"price\": 351.95,\n                        \"currency\": [\n                            \"640e425775661716218c7a0d\"\n                        ],\n                        \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                        \"createdBy\": \"640e433975661716218c7a23\",\n                        \"createdAt\": \"2023-03-12T21:55:53.715Z\",\n                        \"updatedAt\": \"2023-03-12T21:55:53.715Z\"\n                    }\n                ],\n                \"productType\": [\n                    {\n                        \"value\": \"640e4945e1252aeba32e6663\",\n                        \"relationTo\": \"courses\"\n                    }\n                ],\n                \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                \"createdBy\": \"640e433975661716218c7a23\",\n                \"createdAt\": \"2023-03-12T21:55:54.350Z\",\n                \"updatedAt\": \"2023-03-12T21:55:54.350Z\"\n            }\n        ],\n        \"isSubscription\": true,\n        \"createdAt\": \"2023-03-12T22:31:35.020Z\",\n        \"updatedAt\": \"2023-03-12T22:31:35.020Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "New User Order Course Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('product', Math.floor(Math.random() * 1000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Validate the message field is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Amount is a non-negative integer\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.amount).to.be.a('number');\r",
									"    pm.expect(responseData.order.amount).to.be.at.least(0, \"Amount should be non-negative\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the 'products' array is present and not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.products).to.exist.and.to.be.an('array');\r",
									"    pm.expect(responseData.order.products.length).to.be.at.least(1, \"Array should contain at least one element\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethodType\": \"zelle\",\r\n    \"paymentMethod\": {\r\n        \"zelleEmail\": \"{{$randomEmail}}\",\r\n        \"zelleName\": \"{{$randomFullName}}\"\r\n    },\r\n    \"customer\": {\r\n        \"firstName\": \"{{$randomFirstName}}\",\r\n        \"lastName\":\"{{$randomLastName}}\",\r\n        \"email\":\"{{$randomEmail}}\",\r\n        \"password\":\"{{$randomPassword}}\",\r\n        \"phone\": \"{{$randomPhoneNumber}}\"\r\n    },\r\n    \"product\": {{producCourseObj}},\r\n    \"referenceNumber\": \"{{randomNumber}}\",\r\n    \"amount\": {{$randomPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/orders/new-user-order",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"orders",
								"new-user-order"
							]
						}
					},
					"response": [
						{
							"name": "Transactions Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"transactionAble\": {\r\n        \"value\": \"{{courseId}}\",\r\n        \"relationTo\": \"courses\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/transactions",
									"host": [
										"{{api}}"
									],
									"path": [
										"transactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Mar 2023 03:01:01 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677639673"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "706"
								},
								{
									"key": "ETag",
									"value": "W/\"2c2-4tDBtdWMWIr4zltm25kuZkMx7Ok\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Transaction successfully created.\",\n    \"doc\": {\n        \"id\": \"63febfed22ed33e86bbe0db2\",\n        \"amount\": 52251,\n        \"status\": \"inactive\",\n        \"customer\": {\n            \"id\": \"63febdaf4bcf6baf2d54c213\",\n            \"firstName\": \"Gardner\",\n            \"lastName\": \"Ward\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"email\": \"sammy_jerde@hotmail.com\",\n            \"createdAt\": \"2023-03-01T02:51:27.600Z\",\n            \"updatedAt\": \"2023-03-01T02:51:35.131Z\"\n        },\n        \"transactionAble\": {\n            \"value\": {\n                \"id\": \"63fb9c231e385dd6d67dc1b2\",\n                \"name\": \"Componente Docente\",\n                \"description\": \"Docentes\",\n                \"teacher\": \"63dfd4607777384c243e3d0e\",\n                \"createdBy\": \"63dfd4607777384c243e3d0e\",\n                \"createdAt\": \"2023-02-26T17:51:31.949Z\",\n                \"updatedAt\": \"2023-02-26T17:51:31.949Z\"\n            },\n            \"relationTo\": \"courses\"\n        },\n        \"createdAt\": \"2023-03-01T03:01:01.700Z\",\n        \"updatedAt\": \"2023-03-01T03:01:01.700Z\"\n    }\n}"
						},
						{
							"name": "Orders Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"products\": [\"{{productId}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/orders",
									"host": [
										"{{api}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "499"
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 22:31:34 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1678660337"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "843"
								},
								{
									"key": "ETag",
									"value": "W/\"34b-wDqHoHzRKalXEL5dgq+PH7I61eo\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order successfully created.\",\n    \"doc\": {\n        \"id\": \"640e52c76f5b664a1de55095\",\n        \"amount\": 94763,\n        \"status\": \"inactive\",\n        \"customer\": \"640e2d64ced37b00ac351f7e\",\n        \"products\": [\n            {\n                \"id\": \"640e4a6a7d586a50e509ae72\",\n                \"name\": \"Towels\",\n                \"description\": \"Lead\",\n                \"productPrices\": [\n                    {\n                        \"id\": \"640e4a697d586a50e509ae6d\",\n                        \"price\": 351.95,\n                        \"currency\": [\n                            \"640e425775661716218c7a0d\"\n                        ],\n                        \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                        \"createdBy\": \"640e433975661716218c7a23\",\n                        \"createdAt\": \"2023-03-12T21:55:53.715Z\",\n                        \"updatedAt\": \"2023-03-12T21:55:53.715Z\"\n                    }\n                ],\n                \"productType\": [\n                    {\n                        \"value\": \"640e4945e1252aeba32e6663\",\n                        \"relationTo\": \"courses\"\n                    }\n                ],\n                \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                \"createdBy\": \"640e433975661716218c7a23\",\n                \"createdAt\": \"2023-03-12T21:55:54.350Z\",\n                \"updatedAt\": \"2023-03-12T21:55:54.350Z\"\n            }\n        ],\n        \"isSubscription\": true,\n        \"createdAt\": \"2023-03-12T22:31:35.020Z\",\n        \"updatedAt\": \"2023-03-12T22:31:35.020Z\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Existing User",
			"item": [
				{
					"name": "User Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = JSON.parse(pm.request.body.raw)\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"response message should have the User successfully created.\", function () {\r",
									"    pm.expect(responseJson.message).to.eql(\"User successfully created.\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Email is in a valid format\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.doc.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
									"});\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"userEmail\", body.email);\r",
									"pm.collectionVariables.set(\"userPassword\", body.password);\r",
									"pm.collectionVariables.set(\"userId\", responseJson.doc.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/users",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "User Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/users",
									"host": [
										"{{api}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Mar 2023 02:42:08 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677638561"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "247"
								},
								{
									"key": "ETag",
									"value": "W/\"f7-GS9EUuKxL+QakNIFzgVFl17Ppio\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User successfully created.\",\n    \"doc\": {\n        \"id\": \"63febb814bcf6baf2d54c18a\",\n        \"firstName\": \"Mariela\",\n        \"lastName\": \"Russel\",\n        \"roles\": [\n            \"user\"\n        ],\n        \"email\": \"yazmin0@hotmail.com\",\n        \"createdAt\": \"2023-03-01T02:42:09.221Z\",\n        \"updatedAt\": \"2023-03-01T02:42:09.221Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"console.log(responseJson)\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"pm.test(\"response message should have the Auth Passed message\", function () {\r",
									"    pm.expect(responseJson.message).to.eql(\"Auth Passed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Cookie payload-token is present\", () => {\r",
									"  pm.expect(pm.cookies.has('payload-token')).to.be.true;\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": { \"type\": \"string\", \"const\": \"Auth Passed\" },\r",
									"    \"user\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": { \"type\": \"string\" },\r",
									"        \"firstName\": { \"type\": \"string\" },\r",
									"        \"lastName\": { \"type\": \"string\" },\r",
									"        \"roles\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\r",
									"        \"slug\": { \"type\": \"string\" },\r",
									"        \"email\": { \"type\": \"string\", \"format\": \"email\" },\r",
									"        \"createdAt\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
									"        \"updatedAt\": { \"type\": \"string\", \"format\": \"date-time\" }\r",
									"      },\r",
									"      \"required\": [\"id\", \"firstName\", \"lastName\", \"roles\", \"slug\", \"email\", \"createdAt\", \"updatedAt\"]\r",
									"    },\r",
									"    \"token\": { \"type\": \"string\" },\r",
									"    \"exp\": { \"type\": \"number\" }\r",
									"  },\r",
									"  \"required\": [\"message\", \"user\", \"token\", \"exp\"]\r",
									"};\r",
									"\r",
									"pm.test(\"Response matches schema\", function () {\r",
									"    \r",
									"    var response = pm.response.json();\r",
									"    pm.expect(tv4.validate(response, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{userEmail}}\",\r\n    \"password\":\"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/users/login",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "User Admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"guillomarindavila@gmail.com\",\r\n    \"password\":\"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/users/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Feb 2023 20:02:24 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677441772"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Set-Cookie",
									"value": "payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk; Path=/; Expires=Sun, 26 Feb 2023 22:02:25 GMT; HttpOnly; SameSite=Lax"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "608"
								},
								{
									"key": "ETag",
									"value": "W/\"260-s6RoOCQCauMEDs9T7oLSwwLA83Q\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Auth Passed\",\n    \"user\": {\n        \"id\": \"63e015ac1b1dbc4f13ac51e2\",\n        \"firstName\": \"Hayt\",\n        \"lastName\": \"Wayne\",\n        \"phone\": \"4145857846\",\n        \"address\": \"MI casa\",\n        \"birthDate\": \"1999-01-01T00:00:00.000Z\",\n        \"roles\": [\n            \"admin\"\n        ],\n        \"email\": \"haytwayne.16@gmail.com\",\n        \"createdAt\": \"2023-02-05T20:46:37.042Z\",\n        \"updatedAt\": \"2023-02-26T18:28:00.054Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk\",\n    \"exp\": 1677448945\n}"
						},
						{
							"name": "User Editor",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"arepayquezo@gmail.com\",\r\n    \"password\":\"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/users/login",
									"host": [
										"{{api}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Feb 2023 20:02:24 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677441772"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Set-Cookie",
									"value": "payload-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk; Path=/; Expires=Sun, 26 Feb 2023 22:02:25 GMT; HttpOnly; SameSite=Lax"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "608"
								},
								{
									"key": "ETag",
									"value": "W/\"260-s6RoOCQCauMEDs9T7oLSwwLA83Q\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Auth Passed\",\n    \"user\": {\n        \"id\": \"63e015ac1b1dbc4f13ac51e2\",\n        \"firstName\": \"Hayt\",\n        \"lastName\": \"Wayne\",\n        \"phone\": \"4145857846\",\n        \"address\": \"MI casa\",\n        \"birthDate\": \"1999-01-01T00:00:00.000Z\",\n        \"roles\": [\n            \"admin\"\n        ],\n        \"email\": \"haytwayne.16@gmail.com\",\n        \"createdAt\": \"2023-02-05T20:46:37.042Z\",\n        \"updatedAt\": \"2023-02-26T18:28:00.054Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhheXR3YXluZS4xNkBnbWFpbC5jb20iLCJpZCI6IjYzZTAxNWFjMWIxZGJjNGYxM2FjNTFlMiIsImNvbGxlY3Rpb24iOiJ1c2VycyIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY3NzQ0MTc0NSwiZXhwIjoxNjc3NDQ4OTQ1fQ.whPk543tYKd0DNnWKUzk5UCJv2NgrBDNfepitE1IMDk\",\n    \"exp\": 1677448945\n}"
						}
					]
				},
				{
					"name": "Order Plan Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('product', Math.floor(Math.random() * 1000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Validate the message field is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Amount is a non-negative integer\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.amount).to.be.a('number');\r",
									"    pm.expect(responseData.order.amount).to.be.at.least(0, \"Amount should be non-negative\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the 'products' array is present and not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.products).to.exist.and.to.be.an('array');\r",
									"    pm.expect(responseData.order.products.length).to.be.at.least(1, \"Array should contain at least one element\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethodType\": \"zelle\",\r\n    \"paymentMethod\": {\r\n        \"zelleEmail\": \"{{$randomEmail}}\",\r\n        \"zelleName\": \"{{$randomFullName}}\"\r\n    },\r\n    \"product\": {{productPlanObj}},\r\n    \"referenceNumber\": \"{{randomNumber}}\",\r\n    \"amount\": {{$randomPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/orders/new-user-order",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"orders",
								"new-user-order"
							]
						}
					},
					"response": [
						{
							"name": "Transactions Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"transactionAble\": {\r\n        \"value\": \"{{courseId}}\",\r\n        \"relationTo\": \"courses\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/transactions",
									"host": [
										"{{api}}"
									],
									"path": [
										"transactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Mar 2023 03:01:01 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677639673"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "706"
								},
								{
									"key": "ETag",
									"value": "W/\"2c2-4tDBtdWMWIr4zltm25kuZkMx7Ok\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Transaction successfully created.\",\n    \"doc\": {\n        \"id\": \"63febfed22ed33e86bbe0db2\",\n        \"amount\": 52251,\n        \"status\": \"inactive\",\n        \"customer\": {\n            \"id\": \"63febdaf4bcf6baf2d54c213\",\n            \"firstName\": \"Gardner\",\n            \"lastName\": \"Ward\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"email\": \"sammy_jerde@hotmail.com\",\n            \"createdAt\": \"2023-03-01T02:51:27.600Z\",\n            \"updatedAt\": \"2023-03-01T02:51:35.131Z\"\n        },\n        \"transactionAble\": {\n            \"value\": {\n                \"id\": \"63fb9c231e385dd6d67dc1b2\",\n                \"name\": \"Componente Docente\",\n                \"description\": \"Docentes\",\n                \"teacher\": \"63dfd4607777384c243e3d0e\",\n                \"createdBy\": \"63dfd4607777384c243e3d0e\",\n                \"createdAt\": \"2023-02-26T17:51:31.949Z\",\n                \"updatedAt\": \"2023-02-26T17:51:31.949Z\"\n            },\n            \"relationTo\": \"courses\"\n        },\n        \"createdAt\": \"2023-03-01T03:01:01.700Z\",\n        \"updatedAt\": \"2023-03-01T03:01:01.700Z\"\n    }\n}"
						},
						{
							"name": "Orders Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"products\": [\"{{productId}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/orders",
									"host": [
										"{{api}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "499"
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 22:31:34 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1678660337"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "843"
								},
								{
									"key": "ETag",
									"value": "W/\"34b-wDqHoHzRKalXEL5dgq+PH7I61eo\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order successfully created.\",\n    \"doc\": {\n        \"id\": \"640e52c76f5b664a1de55095\",\n        \"amount\": 94763,\n        \"status\": \"inactive\",\n        \"customer\": \"640e2d64ced37b00ac351f7e\",\n        \"products\": [\n            {\n                \"id\": \"640e4a6a7d586a50e509ae72\",\n                \"name\": \"Towels\",\n                \"description\": \"Lead\",\n                \"productPrices\": [\n                    {\n                        \"id\": \"640e4a697d586a50e509ae6d\",\n                        \"price\": 351.95,\n                        \"currency\": [\n                            \"640e425775661716218c7a0d\"\n                        ],\n                        \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                        \"createdBy\": \"640e433975661716218c7a23\",\n                        \"createdAt\": \"2023-03-12T21:55:53.715Z\",\n                        \"updatedAt\": \"2023-03-12T21:55:53.715Z\"\n                    }\n                ],\n                \"productType\": [\n                    {\n                        \"value\": \"640e4945e1252aeba32e6663\",\n                        \"relationTo\": \"courses\"\n                    }\n                ],\n                \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                \"createdBy\": \"640e433975661716218c7a23\",\n                \"createdAt\": \"2023-03-12T21:55:54.350Z\",\n                \"updatedAt\": \"2023-03-12T21:55:54.350Z\"\n            }\n        ],\n        \"isSubscription\": true,\n        \"createdAt\": \"2023-03-12T22:31:35.020Z\",\n        \"updatedAt\": \"2023-03-12T22:31:35.020Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Order Course Creation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('product', Math.floor(Math.random() * 1000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Validate the message field is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Amount is a non-negative integer\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.amount).to.be.a('number');\r",
									"    pm.expect(responseData.order.amount).to.be.at.least(0, \"Amount should be non-negative\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the 'products' array is present and not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.order.products).to.exist.and.to.be.an('array');\r",
									"    pm.expect(responseData.order.products.length).to.be.at.least(1, \"Array should contain at least one element\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paymentMethodType\": \"zelle\",\r\n    \"paymentMethod\": {\r\n        \"zelleEmail\": \"{{$randomEmail}}\",\r\n        \"zelleName\": \"{{$randomFullName}}\"\r\n    },\r\n    \"product\": {{producCourseObj}},\r\n    \"referenceNumber\": \"{{randomNumber}}\",\r\n    \"amount\": {{$randomPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/orders/new-user-order",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"orders",
								"new-user-order"
							]
						}
					},
					"response": [
						{
							"name": "Transactions Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"transactionAble\": {\r\n        \"value\": \"{{courseId}}\",\r\n        \"relationTo\": \"courses\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/transactions",
									"host": [
										"{{api}}"
									],
									"path": [
										"transactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "498"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Mar 2023 03:01:01 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1677639673"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "706"
								},
								{
									"key": "ETag",
									"value": "W/\"2c2-4tDBtdWMWIr4zltm25kuZkMx7Ok\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Transaction successfully created.\",\n    \"doc\": {\n        \"id\": \"63febfed22ed33e86bbe0db2\",\n        \"amount\": 52251,\n        \"status\": \"inactive\",\n        \"customer\": {\n            \"id\": \"63febdaf4bcf6baf2d54c213\",\n            \"firstName\": \"Gardner\",\n            \"lastName\": \"Ward\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"email\": \"sammy_jerde@hotmail.com\",\n            \"createdAt\": \"2023-03-01T02:51:27.600Z\",\n            \"updatedAt\": \"2023-03-01T02:51:35.131Z\"\n        },\n        \"transactionAble\": {\n            \"value\": {\n                \"id\": \"63fb9c231e385dd6d67dc1b2\",\n                \"name\": \"Componente Docente\",\n                \"description\": \"Docentes\",\n                \"teacher\": \"63dfd4607777384c243e3d0e\",\n                \"createdBy\": \"63dfd4607777384c243e3d0e\",\n                \"createdAt\": \"2023-02-26T17:51:31.949Z\",\n                \"updatedAt\": \"2023-02-26T17:51:31.949Z\"\n            },\n            \"relationTo\": \"courses\"\n        },\n        \"createdAt\": \"2023-03-01T03:01:01.700Z\",\n        \"updatedAt\": \"2023-03-01T03:01:01.700Z\"\n    }\n}"
						},
						{
							"name": "Orders Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": {{randomAmmount}},\r\n    \"status\": \"inactive\",\r\n    \"customer\": \"{{userId}}\",\r\n    \"products\": [\"{{productId}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/orders",
									"host": [
										"{{api}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "499"
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 22:31:34 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1678660337"
								},
								{
									"key": "Content-Language",
									"value": "en"
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "843"
								},
								{
									"key": "ETag",
									"value": "W/\"34b-wDqHoHzRKalXEL5dgq+PH7I61eo\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order successfully created.\",\n    \"doc\": {\n        \"id\": \"640e52c76f5b664a1de55095\",\n        \"amount\": 94763,\n        \"status\": \"inactive\",\n        \"customer\": \"640e2d64ced37b00ac351f7e\",\n        \"products\": [\n            {\n                \"id\": \"640e4a6a7d586a50e509ae72\",\n                \"name\": \"Towels\",\n                \"description\": \"Lead\",\n                \"productPrices\": [\n                    {\n                        \"id\": \"640e4a697d586a50e509ae6d\",\n                        \"price\": 351.95,\n                        \"currency\": [\n                            \"640e425775661716218c7a0d\"\n                        ],\n                        \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                        \"createdBy\": \"640e433975661716218c7a23\",\n                        \"createdAt\": \"2023-03-12T21:55:53.715Z\",\n                        \"updatedAt\": \"2023-03-12T21:55:53.715Z\"\n                    }\n                ],\n                \"productType\": [\n                    {\n                        \"value\": \"640e4945e1252aeba32e6663\",\n                        \"relationTo\": \"courses\"\n                    }\n                ],\n                \"lastModifiedBy\": \"640e433975661716218c7a23\",\n                \"createdBy\": \"640e433975661716218c7a23\",\n                \"createdAt\": \"2023-03-12T21:55:54.350Z\",\n                \"updatedAt\": \"2023-03-12T21:55:54.350Z\"\n            }\n        ],\n        \"isSubscription\": true,\n        \"createdAt\": \"2023-03-12T22:31:35.020Z\",\n        \"updatedAt\": \"2023-03-12T22:31:35.020Z\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Products that are plans",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"const responseJson = pm.response.json();\r",
							"const products = responseJson.docs\r",
							"\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Name is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    pm.expect(responseData.docs).to.have.lengthOf.at.least(1, \"Array should not be empty\");\r",
							"\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Description is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"productType.relationTo is a plans\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.productType.relationTo).to.equal(\"plans\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"if (products.length > 0) {\r",
							"    pm.collectionVariables.set(\"productPlanId\", products[0].id);\r",
							"}\r",
							"\r",
							"\r",
							"if (products.length > 0) {\r",
							"    pm.collectionVariables.set(\"productPlanObj\", JSON.stringify(products[0]));\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-url}}/products?where[productType.relationTo][equals]=plans",
					"host": [
						"{{api-url}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "where[productType.relationTo][equals]",
							"value": "plans"
						}
					]
				}
			},
			"response": [
				{
					"name": "Products",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api}}/products",
							"host": [
								"{{api}}"
							],
							"path": [
								"products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "500"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "479"
						},
						{
							"key": "Date",
							"value": "Sat, 25 Mar 2023 14:26:07 GMT"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1679754375"
						},
						{
							"key": "Content-Language",
							"value": "en"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "W/\"914-4Gt/O56zFK7xRJPl50Pzm1WXj6w\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"docs\": [\n        {\n            \"id\": \"641f03b01bfb1bcda3358391\",\n            \"name\": \"Plan Front End\",\n            \"description\": \"front end\",\n            \"productType\": {\n                \"value\": {\n                    \"id\": \"641f03821bfb1bcda3358349\",\n                    \"name\": \"Plan Front End\",\n                    \"description\": \"front end\",\n                    \"status\": \"active\",\n                    \"category\": [\n                        {\n                            \"id\": \"641f02e11bfb1bcda335823b\",\n                            \"name\": \"Programacion \",\n                            \"description\": \"Categoria de programacion\",\n                            \"image\": \"641f02d11bfb1bcda3358234\",\n                            \"createdBy\": \"641efd461bfb1bcda3358169\",\n                            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                            \"createdAt\": \"2023-03-25T14:19:13.129Z\",\n                            \"updatedAt\": \"2023-03-25T14:19:13.129Z\"\n                        }\n                    ],\n                    \"courses\": [\n                        {\n                            \"id\": \"641f02a11bfb1bcda3358205\",\n                            \"name\": \"Programacion 1\",\n                            \"description\": \"curso front 2\",\n                            \"teacher\": \"641f01ad1bfb1bcda33581ce\",\n                            \"createdBy\": \"641efd461bfb1bcda3358169\",\n                            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                            \"createdAt\": \"2023-03-25T14:18:09.440Z\",\n                            \"updatedAt\": \"2023-03-25T14:20:06.453Z\",\n                            \"category\": [\n                                \"641f02e11bfb1bcda335823b\"\n                            ],\n                            \"lessons\": [\n                                \"641f03081bfb1bcda33582aa\"\n                            ]\n                        }\n                    ],\n                    \"periodicity\": \"monthly\",\n                    \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                    \"createdBy\": \"641efd461bfb1bcda3358169\",\n                    \"createdAt\": \"2023-03-25T14:21:54.890Z\",\n                    \"updatedAt\": \"2023-03-25T14:21:54.890Z\"\n                },\n                \"relationTo\": \"plans\"\n            },\n            \"productStatus\": \"active\",\n            \"productPrice\": [\n                {\n                    \"price\": 100,\n                    \"aceptedCurrency\": \"USD\",\n                    \"id\": \"641f039602a81f29a147cada\"\n                }\n            ],\n            \"productImage\": {\n                \"id\": \"641f03ac1bfb1bcda3358389\",\n                \"altText\": \"gato restiao\",\n                \"createdBy\": \"641efd461bfb1bcda3358169\",\n                \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                \"filename\": \"instapet-undefined(7).png\",\n                \"mimeType\": \"image/png\",\n                \"filesize\": 135476,\n                \"width\": 512,\n                \"height\": 512,\n                \"sizes\": {\n                    \"thumbnail\": {\n                        \"width\": 400,\n                        \"height\": 300,\n                        \"mimeType\": \"image/png\",\n                        \"filesize\": 286765,\n                        \"filename\": \"instapet-undefined(7)-400x300.png\",\n                        \"url\": \"http://localhost:3000/media/instapet-undefined(7)-400x300.png\"\n                    },\n                    \"card\": {\n                        \"url\": null,\n                        \"width\": null,\n                        \"height\": null,\n                        \"mimeType\": null,\n                        \"filesize\": null,\n                        \"filename\": null\n                    },\n                    \"tablet\": {\n                        \"url\": null,\n                        \"width\": null,\n                        \"height\": null,\n                        \"mimeType\": null,\n                        \"filesize\": null,\n                        \"filename\": null\n                    }\n                },\n                \"createdAt\": \"2023-03-25T14:22:36.032Z\",\n                \"updatedAt\": \"2023-03-25T14:22:36.032Z\",\n                \"url\": \"http://localhost:3000/media/instapet-undefined(7).png\"\n            },\n            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n            \"createdBy\": \"641efd461bfb1bcda3358169\",\n            \"createdAt\": \"2023-03-25T14:22:40.492Z\",\n            \"updatedAt\": \"2023-03-25T14:22:40.492Z\"\n        }\n    ],\n    \"totalDocs\": 1,\n    \"limit\": 10,\n    \"totalPages\": 1,\n    \"page\": 1,\n    \"pagingCounter\": 1,\n    \"hasPrevPage\": false,\n    \"hasNextPage\": false,\n    \"prevPage\": null,\n    \"nextPage\": null\n}"
				}
			]
		},
		{
			"name": "Products that are courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"const responseJson = pm.response.json();\r",
							"const products = responseJson.docs\r",
							"\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Name is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    pm.expect(responseData.docs).to.have.lengthOf.at.least(1, \"Array should not be empty\");\r",
							"\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Description is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"productType.relationTo is a courses\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.docs).to.be.an('array');\r",
							"    responseData.docs.forEach(function (doc) {\r",
							"        pm.expect(doc.productType.relationTo).to.equal(\"courses\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"if (products.length > 0) {\r",
							"    pm.collectionVariables.set(\"producCourseId\", products[0].id);\r",
							"}\r",
							"\r",
							"\r",
							"if (products.length > 0) {\r",
							"    pm.collectionVariables.set(\"producCourseObj\", JSON.stringify(products[0]));\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-url}}/products?where[productType.relationTo][equals]=courses",
					"host": [
						"{{api-url}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "where[productType.relationTo][equals]",
							"value": "courses"
						}
					]
				}
			},
			"response": [
				{
					"name": "Products",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api}}/products",
							"host": [
								"{{api}}"
							],
							"path": [
								"products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "500"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "479"
						},
						{
							"key": "Date",
							"value": "Sat, 25 Mar 2023 14:26:07 GMT"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1679754375"
						},
						{
							"key": "Content-Language",
							"value": "en"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "PUT, PATCH, POST, GET, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Content-Encoding, x-apollo-tracing"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "W/\"914-4Gt/O56zFK7xRJPl50Pzm1WXj6w\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"docs\": [\n        {\n            \"id\": \"641f03b01bfb1bcda3358391\",\n            \"name\": \"Plan Front End\",\n            \"description\": \"front end\",\n            \"productType\": {\n                \"value\": {\n                    \"id\": \"641f03821bfb1bcda3358349\",\n                    \"name\": \"Plan Front End\",\n                    \"description\": \"front end\",\n                    \"status\": \"active\",\n                    \"category\": [\n                        {\n                            \"id\": \"641f02e11bfb1bcda335823b\",\n                            \"name\": \"Programacion \",\n                            \"description\": \"Categoria de programacion\",\n                            \"image\": \"641f02d11bfb1bcda3358234\",\n                            \"createdBy\": \"641efd461bfb1bcda3358169\",\n                            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                            \"createdAt\": \"2023-03-25T14:19:13.129Z\",\n                            \"updatedAt\": \"2023-03-25T14:19:13.129Z\"\n                        }\n                    ],\n                    \"courses\": [\n                        {\n                            \"id\": \"641f02a11bfb1bcda3358205\",\n                            \"name\": \"Programacion 1\",\n                            \"description\": \"curso front 2\",\n                            \"teacher\": \"641f01ad1bfb1bcda33581ce\",\n                            \"createdBy\": \"641efd461bfb1bcda3358169\",\n                            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                            \"createdAt\": \"2023-03-25T14:18:09.440Z\",\n                            \"updatedAt\": \"2023-03-25T14:20:06.453Z\",\n                            \"category\": [\n                                \"641f02e11bfb1bcda335823b\"\n                            ],\n                            \"lessons\": [\n                                \"641f03081bfb1bcda33582aa\"\n                            ]\n                        }\n                    ],\n                    \"periodicity\": \"monthly\",\n                    \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                    \"createdBy\": \"641efd461bfb1bcda3358169\",\n                    \"createdAt\": \"2023-03-25T14:21:54.890Z\",\n                    \"updatedAt\": \"2023-03-25T14:21:54.890Z\"\n                },\n                \"relationTo\": \"plans\"\n            },\n            \"productStatus\": \"active\",\n            \"productPrice\": [\n                {\n                    \"price\": 100,\n                    \"aceptedCurrency\": \"USD\",\n                    \"id\": \"641f039602a81f29a147cada\"\n                }\n            ],\n            \"productImage\": {\n                \"id\": \"641f03ac1bfb1bcda3358389\",\n                \"altText\": \"gato restiao\",\n                \"createdBy\": \"641efd461bfb1bcda3358169\",\n                \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n                \"filename\": \"instapet-undefined(7).png\",\n                \"mimeType\": \"image/png\",\n                \"filesize\": 135476,\n                \"width\": 512,\n                \"height\": 512,\n                \"sizes\": {\n                    \"thumbnail\": {\n                        \"width\": 400,\n                        \"height\": 300,\n                        \"mimeType\": \"image/png\",\n                        \"filesize\": 286765,\n                        \"filename\": \"instapet-undefined(7)-400x300.png\",\n                        \"url\": \"http://localhost:3000/media/instapet-undefined(7)-400x300.png\"\n                    },\n                    \"card\": {\n                        \"url\": null,\n                        \"width\": null,\n                        \"height\": null,\n                        \"mimeType\": null,\n                        \"filesize\": null,\n                        \"filename\": null\n                    },\n                    \"tablet\": {\n                        \"url\": null,\n                        \"width\": null,\n                        \"height\": null,\n                        \"mimeType\": null,\n                        \"filesize\": null,\n                        \"filename\": null\n                    }\n                },\n                \"createdAt\": \"2023-03-25T14:22:36.032Z\",\n                \"updatedAt\": \"2023-03-25T14:22:36.032Z\",\n                \"url\": \"http://localhost:3000/media/instapet-undefined(7).png\"\n            },\n            \"lastModifiedBy\": \"641efd461bfb1bcda3358169\",\n            \"createdBy\": \"641efd461bfb1bcda3358169\",\n            \"createdAt\": \"2023-03-25T14:22:40.492Z\",\n            \"updatedAt\": \"2023-03-25T14:22:40.492Z\"\n        }\n    ],\n    \"totalDocs\": 1,\n    \"limit\": 10,\n    \"totalPages\": 1,\n    \"page\": 1,\n    \"pagingCounter\": 1,\n    \"hasPrevPage\": false,\n    \"hasNextPage\": false,\n    \"prevPage\": null,\n    \"nextPage\": null\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "productPlanId",
			"value": ""
		},
		{
			"key": "productPlanObj",
			"value": ""
		},
		{
			"key": "producCourseId",
			"value": ""
		},
		{
			"key": "producCourseObj",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "product",
			"value": ""
		}
	]
}